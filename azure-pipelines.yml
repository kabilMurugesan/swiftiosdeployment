# # Xcode
# # Build, test, and archive an Xcode workspace on macOS.
# # Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

# trigger:
# - main

# pool:
#   vmImage: 'macos-latest'

# # - script: |
# #     sudo xcode-select -switch /Applications/Xcode_16.app/Contents/Developer
# #     xcodebuild -version
# #   displayName: 'Switch to Xcode 16'


# # - script: ls /Applications/
# #   displayName: 'List available Xcode versions'

# steps:
# - task: Xcode@5
#   inputs:
#     actions: 'build'
#     scheme: 'SwiftDemoProject'
#     sdk: 'iphoneos'
#     configuration: 'Release'
#     xcWorkspacePath: 'SwiftDemoProject.xcodeproj'
#     xcodeVersion: 'specifyPath' # Options: 11, 12, 13, 14, 15, default, specifyPath
#     xcodeDeveloperDir: '/Applications/Xcode_16.app/Contents/Developer'

# - task: InstallAppleCertificate@2
#   inputs:
#     certSecureFile: 'Certificates.p12'
#     certPwd: 'Ccare@123'

# - task: InstallAppleProvisioningProfile@1
#   inputs:
#     provisioningProfileLocation: 'secureFiles'
#     provProfileSecureFile: 'swiftdemoadco1.mobileprovision'
#################################################################develop##############################################################################################
# trigger:
#   branches:
#     include:
#     - main
# variables:
# - name: scheme
#   value: 'SwiftDemoProject'
# - name: sdk
#   value: 'iphoneos'
# - name: configuration
#   value: 'Release'
# - name: teamId
#   value: '354KR9R8P7'
# - name: deploymentTarget
#   value: '18.0'
# stages:
# - stage: __default
#   jobs:
#   - job: Job
#     pool:
#       vmImage: 'macos-15'
#     steps:
#     - task: CmdLine@2
#       displayName: 'List Xcode versions'
#       inputs:
#         script: ls /Applications/
#     - task: InstallAppleCertificate@2
#       inputs:
#         certSecureFile: 'Certificates.p12'
#         certPwd: 'Ccare@123'
#     - task: InstallAppleProvisioningProfile@1
#       inputs:
#         provisioningProfileLocation: 'secureFiles'
#         provProfileSecureFile: 'swiftdemoadco1.mobileprovision'
#     - task: CmdLine@2
#       displayName: 'Clean project'
#       inputs:
#         script: |
#           xcodebuild clean \
#             -project SwiftDemoProject.xcodeproj \
#             -scheme $(scheme) \
#             -configuration $(configuration) \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Automatic \
#             CODE_SIGN_IDENTITY="Apple Development" \
#             DEVELOPMENT_TEAM=$(teamId)
#     - task: CmdLine@2
#       displayName: 'Build project'
#       inputs:
#         - script: |
#             xcodebuild build \
#              -project SwiftDemoProject.xcodeproj \
#              -scheme $(scheme) \
#              -configuration $(configuration) \
#              -sdk $(sdk) \
#              CODE_SIGN_STYLE=Manual \
#              CODE_SIGN_IDENTITY="Apple Distribution" \
#              DEVELOPMENT_TEAM=$(teamId) \
#              PROVISIONING_PROFILE_SPECIFIER="8177e2a5-4d52-4726-9da6-242aa1175031"
#   displayName: 'Build'

#         # script: |
#         #   xcodebuild build \
#         #     -project SwiftDemoProject.xcodeproj \
#         #     -scheme $(scheme) \
#         #     -configuration $(configuration) \
#         #     -sdk $(sdk) \
#         #     CODE_SIGN_STYLE=Manual \
#         #     CODE_SIGN_IDENTITY="Apple Development" \
#         #     DEVELOPMENT_TEAM=$(teamId) \
#         #     PROVISIONING_PROFILE_SPECIFIER="swiftdemoadco1.mobileprovision"
#     - task: CmdLine@2
#       displayName: 'Run unit/UI tests'
#       inputs:
#         script: |
#           xcodebuild test \
#             -project SwiftDemoProject.xcodeproj \
#             -scheme $(scheme) \
#             -destination 'platform=iOS Simulator,name=iPhone 15' \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Automatic \
#             CODE_SIGN_IDENTITY="Apple Development" \
#             DEVELOPMENT_TEAM=$(teamId)
#     - task: CmdLine@2
#       displayName: 'Archive app'
#       inputs:
#         script: |
#           xcodebuild archive \
#             -project SwiftDemoProject.xcodeproj \
#             -scheme $(scheme) \
#             -sdk $(sdk) \
#             -configuration $(configuration) \
#             -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Automatic \
#             CODE_SIGN_IDENTITY="Apple Development" \
#             DEVELOPMENT_TEAM=$(teamId)
#     - task: CmdLine@2
#       displayName: 'List contents after archive'
#       inputs:
#         script: |
#           ls -lh $(build.artifactstagingdirectory)/
#     - task: DownloadSecureFile@1
#       name: exportOptionsPlistFile
#       inputs:
#         secureFile: 'ExportOptions.plist'
#     - task: CmdLine@2
#       displayName: 'Export IPA'
#       inputs:
#         script: |
#           xcodebuild -exportArchive \
#             -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#             -exportPath $(build.artifactstagingdirectory)/exportedIPA \
#             -exportOptionsPlist $(exportOptionsPlistFile.secureFilePath) \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Automatic \
#             CODE_SIGN_IDENTITY="Apple Development" \
#             DEVELOPMENT_TEAM=$(teamId)
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
#         ArtifactName: 'drop'
#       displayName: 'Publish IPA artifact'
####################################################fix###########################################################################################


# trigger:
#   branches:
#     include:
#       - main

# variables:
#   scheme: 'SwiftDemoProject'
#   sdk: 'iphoneos'
#   configuration: 'Release'
#   teamId: '354KR9R8P7'
#   deploymentTarget: '17.6'
#   # profileUUID: 'swiftdemoadco1.mobileprovision'    # <-- put your profile UUID here

# pool:
#   vmImage: 'macos-15'

# steps:
# - script: ls /Applications/
#   displayName: 'List Xcode versions'

# - task: InstallAppleCertificate@2
#   inputs:
#     certSecureFile: 'Certificates.p12'
#     certPwd: 'Ccare@123'

# - task: InstallAppleProvisioningProfile@1
#   inputs:
#     provisioningProfileLocation: 'secureFiles'
#     provProfileSecureFile: 'swiftdemoadco1.mobileprovision'

# - script: |
#     xcodebuild clean \
#       -project SwiftDemoProject.xcodeproj \
#       -scheme $(scheme) \
#       -configuration $(configuration) \
#       IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#       CODE_SIGN_STYLE=Manual \
#       CODE_SIGN_IDENTITY="Apple Distribution" \
#       DEVELOPMENT_TEAM=$(teamId)
#       # PROVISIONING_PROFILE_SPECIFIER=$(profileUUID)
#   displayName: 'Clean project'

# - script: |
#     xcodebuild build \
#       -project SwiftDemoProject.xcodeproj \
#       -scheme $(scheme) \
#       -configuration $(configuration) \
#       -sdk $(sdk) \
#       CODE_SIGN_STYLE=Manual \
#       CODE_SIGN_IDENTITY="Apple Distribution" \
#       DEVELOPMENT_TEAM=$(teamId)
#       # PROVISIONING_PROFILE_SPECIFIER=$(profileUUID)
#   displayName: 'Build project'

# - script: |
#     xcodebuild test \
#       -project SwiftDemoProject.xcodeproj \
#       -scheme $(scheme) \
#       -destination 'platform=iOS Simulator,name=iPhone 15' \
#       IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget)
#   displayName: 'Run unit/UI tests'

# - script: |
#     xcodebuild archive \
#       -project SwiftDemoProject.xcodeproj \
#       -scheme $(scheme) \
#       -sdk $(sdk) \
#       -configuration $(configuration) \
#       -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#       IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#       CODE_SIGN_STYLE=Manual \
#       CODE_SIGN_IDENTITY="Apple Distribution" \
#       DEVELOPMENT_TEAM=$(teamId) 
#       # PROVISIONING_PROFILE_SPECIFIER=$(profileUUID)
#   displayName: 'Archive app'

# - script: |
#     ls -lh $(build.artifactstagingdirectory)/
#   displayName: 'List contents after archive'

# - task: DownloadSecureFile@1
#   name: exportOptionsPlistFile
#   inputs:
#     secureFile: 'ExportOptions.plist'

# - script: |
#     xcodebuild -exportArchive \
#       -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#       -exportPath $(build.artifactstagingdirectory)/exportedIPA \
#       -exportOptionsPlist $(exportOptionsPlistFile.secureFilePath) \
#       IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#       CODE_SIGN_STYLE=Manual \
#       CODE_SIGN_IDENTITY="Apple Distribution" \
#       DEVELOPMENT_TEAM=$(teamId) 
#       # PROVISIONING_PROFILE_SPECIFIER=$(profileUUID)
#   displayName: 'Export IPA'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
#     ArtifactName: 'drop'
#   displayName: 'Publish IPA artifact'



# trigger:
#   branches:
#     include:
#     - main
# variables:
# - name: scheme
#   value: 'SwiftDemoProject'
# - name: sdk
#   value: 'iphoneos'
# - name: configuration
#   value: 'Release'
# - name: teamId
#   value: '354KR9R8P7'
# - name: deploymentTarget
#   value: '18.0'
# stages:
# - stage: __default
#   jobs:
#   - job: Job
#     pool:
#       vmImage: 'macos-15'
#     steps:
#     - task: CmdLine@2
#       displayName: 'List Xcode versions'
#       inputs:
#         script: ls /Applications/
#     - task: InstallAppleCertificate@2
#       inputs:
#         certSecureFile: 'Certificates.p12'
#         certPwd: 'Ccare@123'
#     - task: InstallAppleProvisioningProfile@1
#       inputs:
#         provisioningProfileLocation: 'secureFiles'
#         provProfileSecureFile: 'swiftdemoadco1.mobileprovision'
#     - task: CmdLine@2
#       displayName: 'Clean project'
#       inputs:
#         script: |2

#           xcodebuild clean \

#             -project SwiftDemoProject.xcodeproj \

#             -scheme $(scheme) \

#             -configuration $(configuration) \

#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \

#             CODE_SIGN_STYLE=Automatic \

#             CODE_SIGN_IDENTITY="Apple Development" \

#             DEVELOPMENT_TEAM=$(teamId) \

#             PROVISIONING_PROFILE_SPECIFIER=""
#     - task: CmdLine@2
#       displayName: 'Build project'
#       inputs:
#         script: |2

#           xcodebuild build \

#             -project SwiftDemoProject.xcodeproj \

#             -scheme $(scheme) \

#             -configuration $(configuration) \

#             -sdk $(sdk) \

#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \

#             CODE_SIGN_STYLE=Automatic \

#             CODE_SIGN_IDENTITY="Apple Development" \

#             DEVELOPMENT_TEAM=$(teamId) \

#             PROVISIONING_PROFILE_SPECIFIER=""
#     - task: CmdLine@2
#       displayName: 'Run unit/UI tests'
#       inputs:
#         script: |2

#           xcodebuild test \

#             -project SwiftDemoProject.xcodeproj \

#             -scheme $(scheme) \

#             -destination 'platform=iOS Simulator,name=iPhone 15' \

#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \

#             CODE_SIGN_STYLE=Automatic \

#             CODE_SIGN_IDENTITY="Apple Development" \

#             DEVELOPMENT_TEAM=$(teamId) \

#             PROVISIONING_PROFILE_SPECIFIER=""
#     - task: CmdLine@2
#       displayName: 'Archive app'
#       inputs:
#         script: |2

#           xcodebuild archive \

#             -project SwiftDemoProject.xcodeproj \

#             -scheme $(scheme) \

#             -sdk $(sdk) \

#             -configuration $(configuration) \

#             -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \

#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \

#             CODE_SIGN_STYLE=Automatic \

#             CODE_SIGN_IDENTITY="Apple Development" \

#             DEVELOPMENT_TEAM=$(teamId) \

#             PROVISIONING_PROFILE_SPECIFIER=""
#     - task: CmdLine@2
#       displayName: 'Export IPA'
#       inputs:
#         script: |2

#           xcodebuild -exportArchive \

#             -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \

#             -exportPath $(build.artifactstagingdirectory)/exportedIPA \

#             -exportOptionsPlist ExportOptions.plist \

#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \

#             CODE_SIGN_STYLE=Automatic \

#             CODE_SIGN_IDENTITY="Apple Development" \

#             DEVELOPMENT_TEAM=$(teamId) \

#             PROVISIONING_PROFILE_SPECIFIER=""
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
#         ArtifactName: 'drop'
#       displayName: 'Publish IPA artifact'
#########################################################################working build######################################################################
# trigger:
#   branches:
#     include:
#       - main

# variables:
#   - name: scheme
#     value: 'SwiftDemoProject'
#   - name: sdk
#     value: 'iphoneos'
#   - name: configuration
#     value: 'Release'
#   - name: teamId
#     value: '354KR9R8P7'
#   - name: deploymentTarget
#     value: '18.0'

# stages:
# - stage: __default
#   jobs:
#   - job: Job
#     pool:
#       vmImage: 'macos-15'
#     steps:
#     - task: CmdLine@2
#       displayName: 'List Xcode versions'
#       inputs:
#         script: ls /Applications/
#     - task: InstallAppleCertificate@2
#       inputs:
#         certSecureFile: 'Certificates.p12'
#         certPwd: 'Ccare@123'
#     - task: InstallAppleProvisioningProfile@1
#       inputs:
#         provisioningProfileLocation: 'secureFiles'
#         provProfileSecureFile: 'swiftdemoadco1.mobileprovision'
#     - task: CmdLine@2
#       displayName: 'Clean project'
#       inputs:
#         script: |
#           xcodebuild clean \
#             -project SwiftDemoProject.xcodeproj \
#             -scheme $(scheme) \
#             -configuration $(configuration) \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Automatic \
#             CODE_SIGN_IDENTITY="Apple Development" \
#             DEVELOPMENT_TEAM=$(teamId) \
#             PROVISIONING_PROFILE_SPECIFIER="com.concertidc.swiftdemoapp"

#     -task: CmdLine@2
#        - script: ls ~/Library/MobileDevice/Provisioning\ Profiles/
#       displayName: 'List Installed Provisioning Profiles'        
#     - task: CmdLine@2
#       displayName: 'Build project'
#       inputs:
#         script: |
#           xcodebuild build \
#             -project SwiftDemoProject.xcodeproj \
#             -scheme $(scheme) \
#             -configuration $(configuration) \
#             -sdk $(sdk) \
#             CODE_SIGN_STYLE=Manual \
#             CODE_SIGN_IDENTITY="Apple Distribution" \
#             DEVELOPMENT_TEAM=$(teamId) \
#             PROVISIONING_PROFILE_SPECIFIER="com.concertidc.swiftdemoapp"
#     # - task: CmdLine@2
#     #   displayName: 'Run unit/UI tests'
#     #   inputs:
#     #     script: |
#     #       xcodebuild test \
#     #         -project SwiftDemoProject.xcodeproj \
#     #         -scheme $(scheme) \
#     #         -destination 'platform=iOS Simulator,name=iPhone 15' \
#     #         IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#     #         CODE_SIGN_STYLE=Automatic \
#     #         CODE_SIGN_IDENTITY="Apple Development" \
#     #         DEVELOPMENT_TEAM=$(teamId) \
#     #         PROVISIONING_PROFILE_SPECIFIER=""
#     - task: CmdLine@2
#       displayName: 'Archive app'
#       inputs:
#         script: |
#           xcodebuild archive \
#             -project SwiftDemoProject.xcodeproj \
#             -scheme $(scheme) \
#             -sdk $(sdk) \
#             -configuration $(configuration) \
#             -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Manual \
#             CODE_SIGN_IDENTITY="Apple Distribution" \
#             DEVELOPMENT_TEAM=$(teamId) \
#             PROVISIONING_PROFILE_SPECIFIER="com.concertidc.swiftdemoapp"
#     - task: CmdLine@2
#       displayName: 'Export IPA'
#       inputs:
#         script: |
#           xcodebuild -exportArchive \
#             -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#             -exportPath $(build.artifactstagingdirectory)/exportedIPA \
#             -exportOptionsPlist ExportOptions.plist \
#             IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#             CODE_SIGN_STYLE=Manual \
#             CODE_SIGN_IDENTITY="Apple Distribution" \
#             DEVELOPMENT_TEAM=$(teamId) \
#             PROVISIONING_PROFILE_SPECIFIER="com.concertidc.swiftdemoapp"
#     - task: PublishBuildArtifacts@1
#       displayName: 'Publish IPA artifact'
#       inputs:
#         PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
#         ArtifactName: 'drop'

################################################################################################################

# trigger:
#   branches:
#     include:
#       - main

# variables:
#   - name: scheme
#     value: 'SwiftDemoProject'
#   - name: sdk
#     value: 'iphoneos'
#   - name: configuration
#     value: 'Release'
#   - name: teamId
#     value: '354KR9R8P7'
#   - name: deploymentTarget
#     value: '18.0'

# stages:
# - stage: Build
#   jobs:
#     - job: iOSBuild
#       pool:
#         vmImage: 'macos-15'
#       steps:
#       - task: CmdLine@2
#         displayName: 'List Xcode versios'
#         inputs:
#           script: ls /Applications/

#       - task: InstallAppleCertificate@2
#         inputs:
#           certSecureFile: 'Certificates.p12'
#           certPwd: 'Ccare@123'

#       - task: InstallAppleProvisioningProfile@1
#         inputs:
#           provisioningProfileLocation: 'secureFiles'
#           provProfileSecureFile: 'swiftdemoadco1.mobileprovision'

#       - task: CmdLine@2
#         displayName: 'Clean project'
#         inputs:
#           script: |
#             xcodebuild clean \
#               -project SwiftDemoProject.xcodeproj \
#               -scheme $(scheme) \
#               -configuration $(configuration) \
#               IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#               CODE_SIGN_STYLE=Automatic \
#               DEVELOPMENT_TEAM=$(teamId)

#       - task: CmdLine@2
#         displayName: 'Build project'
#         inputs:
#           script: |
#             xcodebuild build \
#               -project SwiftDemoProject.xcodeproj \
#               -scheme $(scheme) \
#               -configuration $(configuration) \
#               -sdk $(sdk) \
#               CODE_SIGN_STYLE=Automatic \
#               DEVELOPMENT_TEAM=$(teamId)

#       - task: CmdLine@2
#         displayName: 'Archive app'
#         inputs:
#           script: |
#             xcodebuild archive \
#               -project SwiftDemoProject.xcodeproj \
#               -scheme $(scheme) \
#               -sdk $(sdk) \
#               -configuration $(configuration) \
#               -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#               IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#               CODE_SIGN_STYLE=Automatic \
#               CODE_SIGN_IDENTITY="Apple Distribution" \
#               DEVELOPMENT_TEAM=$(teamId)

#       - task: CmdLine@2
#         displayName: 'Export IPA'
#         inputs:
#           script: |
#             xcodebuild -exportArchive \
#               -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#               -exportPath $(build.artifactstagingdirectory)/exportedIPA \
#               -exportOptionsPlist ExportOptions.plist \
#               IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) \
#               CODE_SIGN_STYLE=Automatic \
#               CODE_SIGN_IDENTITY="Apple Distribution" \
#               DEVELOPMENT_TEAM=$(teamId)

#       - task: PublishBuildArtifacts@1
#         displayName: 'Publish IPA artifact'
#         inputs:
#           PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
#           ArtifactName: 'drop'


#######################b uild working##########################################

# trigger:
#   branches:
#     include:
#       - main

# variables:
#   scheme: 'SwiftDemoProject'
#   sdk: 'iphoneos'
#   configuration: 'Release'
#   teamId: '354KR9R8P7'
#   deploymentTarget: '18.0'
#   bundleId: 'com.concertidc.swiftdemoapp'
#   provProfileName: 'swiftdemoadco1'  # <<-- CHANGE THIS to your profile DISPLAY name in Developer Portal

# stages:
# - stage: Build
#   jobs:
#     - job: iOSBuild
#       pool:
#         vmImage: 'macos-15'
#       steps:
#       - task: CmdLine@2
#         displayName: 'List Xcode versions'
#         inputs:
#           script: ls /Applications/

#       - task: InstallAppleCertificate@2
#         displayName: 'Install Apple Certificate'
#         inputs:
#           certSecureFile: 'Certificates.p12'
#           certPwd: 'Ccare@123'

#       - task: InstallAppleProvisioningProfile@1
#         displayName: 'Install Provisioning Profile'
#         inputs:
#           provisioningProfileLocation: 'secureFiles'
#           provProfileSecureFile: 'swiftdemoadco1.mobileprovision'

#       - task: CmdLine@2
#         displayName: 'Clean project'
#         inputs:
#           script: |
#             xcodebuild clean \
#               -project SwiftDemoProject.xcodeproj \
#               -scheme $(scheme) \
#               -configuration $(configuration) \
#               -sdk $(sdk)

#       - task: CmdLine@2
#         displayName: 'Build project'
#         inputs:
#           script: |
#             xcodebuild build \
#               -project SwiftDemoProject.xcodeproj \
#               -scheme $(scheme) \
#               -configuration $(configuration) \
#               -sdk $(sdk) \
#               CODE_SIGN_STYLE=Manual \
#               CODE_SIGN_IDENTITY="Apple Distribution" \
#               DEVELOPMENT_TEAM=$(teamId) \
#               PROVISIONING_PROFILE_SPECIFIER="$(provProfileName)" \
#               PRODUCT_BUNDLE_IDENTIFIER=$(bundleId) \
#               IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget)

#       - task: CmdLine@2
#         displayName: 'Archive app'
#         inputs:
#           script: |
#             xcodebuild archive \
#               -project SwiftDemoProject.xcodeproj \
#               -scheme $(scheme) \
#               -configuration $(configuration) \
#               -sdk $(sdk) \
#               -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#               CODE_SIGN_STYLE=Manual \
#               CODE_SIGN_IDENTITY="Apple Distribution" \
#               DEVELOPMENT_TEAM=$(teamId) \
#               PROVISIONING_PROFILE_SPECIFIER="$(provProfileName)" \
#               PRODUCT_BUNDLE_IDENTIFIER=$(bundleId) \
#               IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget)

#       - task: CmdLine@2
#         displayName: 'Export IPA'
#         inputs:
#           script: |
#             xcodebuild -exportArchive \
#               -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
#               -exportPath $(build.artifactstagingdirectory)/exportedIPA \
#               -exportOptionsPlist ExportOptions.plist

#       - task: PublishBuildArtifacts@1
#         displayName: 'Publish IPA artifact'
#         inputs:
#           PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
#           ArtifactName: 'drop'
########################final fix

trigger:
  branches:
    include:
      - main

variables:
  scheme: 'SwiftDemoProject'
  sdk: 'iphoneos'
  configuration: 'Release'
  teamId: '354KR9R8P7'
  deploymentTarget: '18.0'
  bundleId: 'com.concertidc.swiftdemoapp'
  provProfileName: 'swiftdemoappstore'  # <<-- Change this to your provisioning profile display name
  APPLE_API_KEY_ID: 'TMD5L5775T'
  APPLE_API_ISSUER_ID: '69a6de91-1cd1-47e3-e053-5b8c7c11a4d1'
stages:
  - stage: Build
    jobs:
      - job: iOSBuild
        pool:
          vmImage: 'macos-15'
        steps:
          - task: CmdLine@2
            displayName: 'List Xcode versions'
            inputs:
              script: ls /Applications/

          - task: InstallAppleCertificate@2
            displayName: 'Install Apple Certificate'
            inputs:
              certSecureFile: 'Certificates.p12'
              certPwd: 'Ccare@123'

          - task: InstallAppleProvisioningProfile@1
            displayName: 'Install Provisioning Profile'
            inputs:
              provisioningProfileLocation: 'secureFiles'
              provProfileSecureFile: 'swiftdemoappstore.mobileprovision'

          - task: CmdLine@2
            displayName: 'Clean project'
            inputs:
              script: |
                xcodebuild clean \
                  -project SwiftDemoProject.xcodeproj \
                  -scheme $(scheme) \
                  -configuration $(configuration) \
                  -sdk $(sdk)

          - task: CmdLine@2
            displayName: 'Build project'
            inputs:
              script: |
                xcodebuild build \
                  -project SwiftDemoProject.xcodeproj \
                  -scheme $(scheme) \
                  -configuration $(configuration) \
                  -sdk $(sdk) \
                  CODE_SIGN_STYLE=Manual \
                  CODE_SIGN_IDENTITY="Apple Distribution" \
                  DEVELOPMENT_TEAM=$(teamId) \
                  PROVISIONING_PROFILE_SPECIFIER="$(provProfileName)" \
                  PRODUCT_BUNDLE_IDENTIFIER=$(bundleId) \
                  IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget)

          - task: CmdLine@2
            displayName: 'Archive app'
            inputs:
              script: |
                xcodebuild archive \
                  -project SwiftDemoProject.xcodeproj \
                  -scheme $(scheme) \
                  -configuration $(configuration) \
                  -sdk $(sdk) \
                  -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
                  CODE_SIGN_STYLE=Manual \
                  CODE_SIGN_IDENTITY="Apple Distribution" \
                  DEVELOPMENT_TEAM=$(teamId) \
                  PROVISIONING_PROFILE_SPECIFIER="$(provProfileName)" \
                  PRODUCT_BUNDLE_IDENTIFIER=$(bundleId) \
                  IPHONEOS_DEPLOYMENT_TARGET=$(deploymentTarget) 

          - task: DownloadSecureFile@1
            name: ExportOptionsFile
            displayName: 'Download ExportOptions.plist'
            inputs:
              secureFile: 'ExportOptions.plist'

          - task: CmdLine@2
            displayName: 'Export IPA'
            inputs:
              script: |
                xcodebuild -exportArchive \
                  -archivePath $(build.artifactstagingdirectory)/$(scheme).xcarchive \
                  -exportPath $(build.artifactstagingdirectory)/exportedIPA \
                  -exportOptionsPlist $(ExportOptionsFile.secureFilePath)

          - task: PublishBuildArtifacts@1
            displayName: 'Publish IPA artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)/exportedIPA'
              ArtifactName: 'drop'

          - task: DownloadSecureFile@1
            name: ApiKeyFile
            displayName: 'Download App Store Connect API Key'
            inputs:
              secureFile: 'AuthKey_TMD5L5775T.p8' # exact name in Secure Files
          
          - task: CmdLine@2
            displayName: 'Copy API Key To Expected Path'
            inputs:
              script: |
                mkdir -p ~/.private_keys
                cp "$(ApiKeyFile.secureFilePath)" ~/.private_keys/AuthKey_TMD5L5775T.p8
                ls -l ~/.private_keys
          
          - task: CmdLine@2
            displayName: 'Upload IPA to TestFlight'
            env:
              API_KEY_ID: $(APPLE_API_KEY_ID)
              API_ISSUER_ID: $(APPLE_API_ISSUER_ID)
            inputs:
              script: |
                echo "Uploading IPA with API Key from ~/.private_keys/AuthKey_TMD5L5775T.p8"
                xcrun altool --upload-app \
                  -f "$(build.artifactstagingdirectory)/exportedIPA/SwiftDemoProject.ipa" \
                  -t ios \
                  --apiKey $API_KEY_ID \
                  --apiIssuer $API_ISSUER_ID \
                  --verbose
          # - task: CmdLine@2
          #   displayName: 'Upload IPA to TestFlight'
          #   env:
          #     API_KEY_ID: $(APPLE_API_KEY_ID)
          #     API_ISSUER_ID: $(APPLE_API_ISSUER_ID)
          #   inputs:
          #     script: |
          #       echo "Uploading with API Key at path: $(ApiKeyFile.secureFilePath)"
          #       ls -l $(ApiKeyFile.secureFilePath)

          #       printf '%s\n' "$(ApiKeyFile.secureFilePath)" | od -c

          #       xcrun altool --upload-app \
          #         -f "$(build.artifactstagingdirectory)/exportedIPA/SwiftDemoProject.ipa" \
          #         -t ios \
          #         --apiKey $API_KEY_ID \
          #         --apiIssuer $API_ISSUER_ID \
          #         --apiKeyPath $(ApiKeyFile.secureFilePath) \
          #         --verbose

      

          # - task: CmdLine@2
          #   displayName: 'Upload IPA to TestFlight'
          #   inputs:
          #     script: |
          #       echo "Uploading with API Key at path: $(ApiKeyFile.secureFilePath)"
          #       ls -l "$(ApiKeyFile.secureFilePath)"

          #       echo "File path chars:"
          #       printf '%s\n' "$(ApiKeyFile.secureFilePath)" | od -c

          #       xcrun altool --upload-app \
          #         -f "$(build.artifactstagingdirectory)/exportedIPA/SwiftDemoProject.ipa" \
          #         -t ios \
          #         --apiKey "$(APPLE_API_KEY_ID)" \
          #         --apiIssuer "$(APPLE_API_ISSUER_ID)" \
          #         --apiKeyPath "$(ApiKeyFile.secureFilePath)" \
          #         --verbose

    


